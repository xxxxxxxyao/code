//1.输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。
比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。


class Solution {
    public int[] printNumbers(int n) {
        int i=1;
        for(int j=0;j<n;j++){
            i=i*10;
        }
        int[] arr=new int[i-1];
        int index=0;
        for(int k=1;k<i;k++){
            arr[index]=k;
            index++;
        }
        return arr;
    }
}


//2.找出数组中重复的数字。
class Solution {
    public int findRepeatNumber(int[] nums) {
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            for(int j=i+1;j<nums.length;j+=2){
                if(nums[i]==nums[j]){
                    return nums[i];
                }
            }
        }
        return -1;
    }
}


//3.一个长度为n-1的递增排序数组中的所有数字都是唯一的，
并且每个数字都在范围0～n-1之内。
在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，
请找出这个数字。

class Solution {
    public int missingNumber(int[] nums) {
        for(int i=0;i<nums.length;i++){
            if(nums[i]!=i){
                return i;
            }
        }
        return nums.length;       
    }
}