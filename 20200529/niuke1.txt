//1.数字中出现次数超过一半的数字

public class Solution {
    public int MoreThanHalfNum_Solution(int [] array) {
        Arrays.sort(array);
        int len=array.length/2;
        int a=array[len];
        int count=0;
        for(int i=0;i<array.length;i++){
            if(array[i]==a){
                count++;
            }
        }
        return count>len?a:0;
    }
}

//2.简单错误记录
import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        Map<String,Integer> m=new LinkedHashMap<>();
        while(sc.hasNext()){
            String[] s=sc.next().split("\\\\");
            int row=sc.nextInt();
            String ss=s[s.length-1];
            if((ss.length())<=16){
                String a=ss+" "+row;
                if(!m.containsKey(a)){
                    m.put(a,1);
                }else{
                    int num=m.get(a);
                    m.put(a,num+1);
                }
            }else{
                StringBuilder sb=new StringBuilder(ss);
                String q=sb.substring(ss.length()-16);
                String a=q+" "+row;
                if(!m.containsKey(a)){
                    m.put(a,1);
                }else{
                    int num=m.get(a);
                    m.put(a,num+1);
                }
            }
        }
        int count=0;
        for(String string:m.keySet()){
            count++;
            if(count>(m.keySet().size()-8)) //输出最后八个记录
                System.out.println(string+" "+m.get(string));
        }
    }
}