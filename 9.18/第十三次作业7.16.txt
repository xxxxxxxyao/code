#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<stdlib.h>

//1.调整数组使奇数全部都位于偶数前面。
//
//题目：
//输入一个整数数组，实现一个函数，
//来调整该数组中数字的顺序使得数组中所有的奇数位于数组的前半部分，
//所有偶数位于数组的后半部分。


//int *Fun(int *arr1,int *arr2,int len)
//{
//	int right = len - 1;
//	int left = 0;
//	for (int i = 0; i < len; i++)
//	{
//		if (arr1[i] % 2 == 0)
//		{
//			arr2[right] = arr1[i];
//			right--;
//		}
//		else
//		{
//			arr2[left] = arr1[i];
//			left++;
//		}
//	}
//	return arr2;
//}
//
//void  Show(int *p,int len)
//{
//	for (int i = 0; i < len; i++)
//	{
//		printf("%d ", p[i]);
//	}
//}
//
//int main()
//{
//	int arr1[8] = {1,2,3,4,5,6,7,8};
//	int arr2[8] = { 0 };
//	int len = sizeof(arr2) / sizeof(arr2[0]);
//    int *p=Fun(arr1,arr2,len);
//	Show(p,len);
//    system("pause");
//	return 0;
//}



//2.
//杨氏矩阵 
//有一个二维数组.
//数组的每行从左到右是递增的，每列从上到下是递增的.
//在这样的数组中查找一个数字是否存在。
//时间复杂度小于O(N);
//
//数组：
//1 2 3
//2 3 4
//3 4 5
//
//
//1 3 4
//2 4 5
//4 5 6
//
//1 2 3
//4 5 6
//7 8 9


void Search(int arr[3][3], int x, int row, int col)
{
	int i= 0;
	int j = col - 1;
	while ((i <= 2) && (j >= 0))
	{
		if (arr[i][j] == x)
		{
			printf("存在！");
			break;
		}
		else if (arr[i][j]<x)
		{
			i++;
		}
		else
			j--;
	}
	if ((i>2) || (j<0))
	 {
		printf("不存在！\n");
	 }
}

int main()
{
	int i = 0;
	int arr[3][3] = { { 1, 2, 3 }, { 2, 3, 4 }, { 3, 4, 5 } };
	printf("请输入您要查找的数字：", i);
	scanf("%d", &i);
	Search(arr, i, 3, 3);
	system("pause");
	return 0;
}
