

//1.输入一个整数数组，实现一个函数来调整该数组中数字的顺序，
//使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。

class Solution {
    public int[] exchange(int[] nums) {
        int left=0;
        int right=nums.length-1;
        while(left<right){
            while(nums[left]%2!=0 && left<right){
                left++;
            }

            while(nums[right]%2==0 && left<right){
                right--;
            }

            int tmp=nums[left];
            nums[left]=nums[right];
            nums[right]=tmp;
            left++;
            right--;
        }
        return nums;
    }
}



//2.字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。
class Solution {
    public String reverseLeftWords(String s, int n) {
        char[] arr=s.toCharArray();
        char[] ss=new char[arr.length];
        int j=ss.length-1;
        int k=0;
        for(int i=n-1;i>=0;i--){
            ss[j]=arr[i];
            j--;
        }

        for(int x=n;x<arr.length;x++){
            ss[k]=arr[x];
            k++;
        }
        return new String(ss);
    }
}






